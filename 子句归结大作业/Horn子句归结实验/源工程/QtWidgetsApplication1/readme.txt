由于ASCII编码中并没有收录∨符号，所以在使用本实验的程序时，一律使用“|”符号来代替∨符号。

以下对本程序可进行识别的字符进行说明：
求反符号一律只能识别‘~’符号；
所有的文字头均只能使用‘A’~‘Z’的一位大写字母代替；
特别的，'E'表示EQUAL(x1,x2)文字，当一个语句有且仅有一个E函数时，会根据EQUAL函数的参数列表执行一次全局内容替换。
例如出现  E(f(B),B)  子句后，会将所有的f(B)视为B。

而对于参数列表中的字母：
本程序将'A'~'Z'视为对象代词，不可进行替换；
本程序将'x'后跟一位数字（'0'~'9'）视为变量代词，可进行替换；
本程序将除'x'之外的小写字母'a'~'z'视为使用Skolem形式化之后得到的函数表示，
而且要求干函数头之后应该立刻跟上函数的一位参数，该参数要求用小括号()括起来。

在子句集的最后一行应该输入一个'#'，否则程序会一直等待子句集的输入

一下给出本程序可识别的一个示例输入：

子句集：
S(A,A)|S(B,A)|S(C,A)

~S(x1,A)|H(x1,A)

~H(A,x2)|~H(C,x2)

E(x3,B)|H(A,x3)

R(x6,A)|H(B,x6)

~H(A,x7)|H(B,x7)

~H(x4,f(x4))

~S(x5,A)|~R(x5,A)

~E(A,B)

#

目标子句：
S(A,A)

该示例输入对应的求解问题为破案问题，问题描述如下：
破案问题：在一栋房子里发生了一件神秘的谋杀案，现在可以肯定以下几点事实： 
(a)在这栋房子里仅住有A,B,C三人； 
(b)是住在这栋房子里的人杀了A； 
(c)谋杀者非常恨受害者； (d)A所恨的人，C一定不恨； 
(e)除了B以外，A恨所有的人； (f)B恨所有不比A富有的人； 
(g)A所恨的人，B也恨； (h)没有一个人恨所有的人； 
(i)杀人嫌疑犯一定不会比受害者富有。 
为了推理需要，增加如下常识：(j)A不等于B。 
问：谋杀者是谁？
